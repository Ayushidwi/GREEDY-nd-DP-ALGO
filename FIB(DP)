#include<iostream>
using namespace std;
int fib(int n)
{

    if(n==0||n==1)
        return n;
    int a=fib(n-1);
    int b=fib(n-2);
    return a+b;
}


int topdowndp(int n,int memo[])
{
    if(n==0||n==1)
    {

        memo[n]=n;
        return n;
    }
    if(memo[n]!=-1)
        return memo[n];
    else{
        memo[n]=fib(n-1)+fib(n-2);
    return memo[n];
    }


}

int fib_bottomup_approach(int n)

{
int dp[100]={0);
dp[1]=1;
for(int i=2;i<n;i++)
{
dp[i]=dp[i-1]+dp[i-2];
}
return dp[n];
}
  
  
  
main()
{

    int n;
    cin>>n;
    int memo[100];
    for(int i=0;i<100;i++)
        memo[i]=-1;

    cout<<topdowndp(n,memo)<<endl;
    return 0;
}
